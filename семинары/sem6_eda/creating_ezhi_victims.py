# -*- coding: utf-8 -*-
"""creating Ezhi Victims.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10yvOaAATyYgQfuguMZqKjVvXOruiJ4uL
"""

import pandas as pd
from sklearn.preprocessing import MinMaxScaler
import numpy as np
import random

data = pd.read_csv("https://raw.githubusercontent.com/iad34/seminars/master/materials/data_sem1.csv",
                   sep=";")

data.head()

data = data.rename(columns={"PassengerId": "EzhisVictimID", "Pclass": "IQ", "Fare": "Weight", "Embarked": "SceneOfTheCrime"})

di = {"S": "бар", "C":"начальная школа", "Q": "подворотня"}
data = data.replace({'SceneOfTheCrime':di})

with open ("метро.txt", 'r', encoding = 'UTF-8') as file:
  f = file.read()
metro = list(f.split('\n'))
metro = metro[:148]
cab = data.Cabin.unique()
d = {cab[i]: metro[i] for i in range(len(cab))}
data = data.replace({'Cabin':d})

data = data.replace({'Sex':{'male': 'мальчик', 'female':'девочка'}})

scaler = MinMaxScaler(feature_range = (0, 18))
age_arr = scaler.fit_transform(np.array(data.Age).reshape(-1, 1))
age_arr = age_arr.flatten().round(1)
data.Age = age_arr

data["Family"] = data["Name"].apply(lambda s: s.split(";")[0])
data['FirstName'] = data["Name"].apply(lambda s: s.split(";")[1])
data.drop(columns = 'Name', inplace = True)

with open('фамилии.txt', 'r', encoding = 'UTF-8') as file:
  f = file.read()
f = list(f.split(' '))

nums = [str(i) for i in range(10)]
a = [i for i in f if i[0] not in nums]

with open ('russian_surnames.txt', 'r') as file:
  f = file.read()
surnames = f.split('\n')

random.randint(0, len(surnames))
while len(a) < len(data.Family.unique()):
  surname = surnames[random.randint(0, len(surnames))].capitalize()
  if surname[-2:] in ['ов', 'ев', 'ёв', 'ин', 'ий'] and surname not in a:
    a.append(surname)

unique_surnames = data.Family.unique()

d = {unique_surnames[i]:a[i] for i in range(len(unique_surnames))}
data = data.replace({'Family':d})

fem_sur = data[data.Sex == 'девочка']['Family'].unique()
kek = []
for i in fem_sur:
  kek.append(i[-2:])
ends = list(set(kek))
print(ends)
ends_dict = {i:j for i, j in zip(ends, ['ых', 'ая', 'ина', 'ева', 'ова'])}

data['kek'] = data[(data.Sex == 'девочка')]['Family'].apply(lambda x: x[:-2]+ends_dict[x[-2:]])

data['kek'] = data['kek'].fillna(data['Family'])
data.drop(columns = 'Family', inplace = True)
data.rename(columns = {'kek':'Surname'}, inplace = True)

with open('мужские имена.txt', 'r') as file:
  male_names = file.read().split('\n')
with open('женские имена.txt', 'r') as file:
  female_names = file.read().split('\n')

prob = np.linspace(1, 10, len(female_names))[::-1]
prob = prob/sum(prob)

chosen_f = []
for i in range(len(data[(data.Sex == 'девочка')])):
  chosen_f.append(female_names[int(np.random.choice(len(female_names), 1, p = prob))])
chosen_m = []
prob = np.linspace(1, 10, len(male_names))[::-1]
prob = prob/sum(prob)
for i in range(len(data[(data.Sex == 'мальчик')])):
  chosen_m.append(male_names[int(np.random.choice(len(male_names), 1, p = prob))])

data.loc[(data.Sex == 'девочка'), 'First_Name'] = chosen_f
data.loc[(data.Sex == 'мальчик'), 'First_Name'] = chosen_m

data.drop(columns = 'FirstName', inplace = True)
data.rename(columns = {'Cabin':'MetroStation'}, inplace = True)

data['Name'] = data['Surname']+'; '+data['First_Name']
data.drop(columns = ['Surname', 'First_Name'], inplace = True)

data['IQ']*=10

scaler = MinMaxScaler(feature_range = (0, 19))
age_arr = scaler.fit_transform(np.array(data.Weight).reshape(-1, 1))
age_arr = age_arr.flatten().round(1)
data['Weight'] = age_arr

data.rename(columns = {'SibSp': 'Siblings', 'Parch':'Parents', 'Ticket':'PassID'}, inplace = True)

data.to_csv('EzhiVictims.csv', encoding='utf-8')